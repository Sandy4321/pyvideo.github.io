<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>http://pyvideo.org/</link><description></description><lastBuildDate>Sun, 12 Mar 2017 00:00:00 +0000</lastBuildDate><item><title>Red Hat - how to build diverse and entertaining opensource corporate culture</title><link>http://pyvideo.org/pycon-sk-2017/red-hat-how-to-build-diverse-and-entertaining-opensource-corporate-culture.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In Red Hat, our corporate culture is a very important topic and a focal point for our senior leadership as well as for all of our more than 11,000 Red Hatters globally. As a company built on opensource, our culture includes values such as meritocracy, openness, transparency and diversity. Our culture is what differentiates Red Hat from our large corporate competitors.
But how to preserve this culture and continue growing? How to incorporate diversity and benefit from inclusion? What activities is Red Hat doing in order to balance fun with productivity? And how to convert buzzwords like openness, leadership and meritocracy into real actions? In my session, I will provide answers to these questions using cases from Red Hat Czech and Red Hat global and also discuss any related topic brought up by the audience.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jana Gutierrez Chvalkovska</dc:creator><pubDate>Sun, 12 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-12:pycon-sk-2017/red-hat-how-to-build-diverse-and-entertaining-opensource-corporate-culture.html</guid></item><item><title>Automation with Ansible and Containers</title><link>http://pyvideo.org/pycon-sk-2017/automation-with-ansible-and-containers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ansible is an open source automation platform, written in Python, that can be used for configuration-management, application deployment, cloud provisioning, ad-hoc task-execution, multinode orchestration and so on.&lt;/p&gt;
&lt;p&gt;This talk is an introduction to Ansible for beginners, including tips like how to use containers to mimic multiple machines while iteratively automating some tasks or testing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rodolfo Carvalho</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/automation-with-ansible-and-containers.html</guid></item><item><title>Building Data Pipelines with Python</title><link>http://pyvideo.org/pycon-sk-2017/building-data-pipelines-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Manging data at a company of any size can be a pain. Data pipelines and other automation workflows can help! In this talk, we'll cover how to determine if a task or data process is a good candidate for automation and review some likely frameworks you can use to do so: like Spotify's Luigi and Airbnb's Airflow. The talk will also cover potential issues in automation and how to best validate proper data processing with your new pipeline.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katharine Jarmul</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/building-data-pipelines-with-python.html</guid></item><item><title>Connecting the pieces: breathing life into digital collections</title><link>http://pyvideo.org/pycon-sk-2017/connecting-the-pieces-breathing-life-into-digital-collections.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;You could say the act of 'collecting' is as old as human kind. From when we were hunter-gatherers until today we've always had reasons for accumulating things. Now that we also collect digitally, interesting things can happen. With the help of technology we can easily gather, process, connect, catalogue and zoom in and out of millions of items. Are there also dangers of seeing the things you collect as mere data points? This talk will discuss the practice of digital collecting from a technologist perspective and will touch on collecting as an art practice, digital art collections, webscraping, digital libraries and personal data.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philo van Kemenade</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/connecting-the-pieces-breathing-life-into-digital-collections.html</guid></item><item><title>Django Channels and Real-Time Data</title><link>http://pyvideo.org/pycon-sk-2017/django-channels-and-real-time-data.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rachel is a entrepreneur and full-stack developer who enjoys developing complicated distributed software. She first joined the Internet in 1986 and has since has worked on CAD, networking, cryptography, digital cash, ebooks and price comparison products. Rachel is the founder of Luzme, the world's best ebook price comparison website, which sends price alerts on your watchlist. Originally built with Django/Python, this now includes a new front-end stack based on AngularJS/Firebase. As the founder of Intertrader in 1995, Rachel created a dotcom company aiming to create the world's first digital cash exchange. After surviving 8 years of dotcom boom-and-bust, and after successfully selling the concept to major customers like Mastercard, CREST and Bank of Scotland, she eventually learnt that being 20 years ahead of the market was not necessarily a Good Thing and closed the company. She then worked with Ben Laurie on the OpenPGP::API open source cryptography library, moving on the BBC where she worked on one of the world's top 10 largest CouchDB installations. Rachel is active in the technology and startups communities, with a particular interest in new technologies and companies. She studied Engineering Science at the University of Durham. She lives in Edinburgh, Scotland and is learning to play jazz upright bass.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rachel Willmer</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/django-channels-and-real-time-data.html</guid></item><item><title>End-to-End Encryption of Distributed Applications</title><link>http://pyvideo.org/pycon-sk-2017/end-to-end-encryption-of-distributed-applications.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In today's internet connected environment protection from hackers when developing a distributed or internet connected application is crucial.  This talk will discuss the options available to us as developers for encrypting the traffic between the nodes of our distributed applications to insure that even intercepted messages are un-readable, and un-encryptable by an adversary.  To achieve this we will use one-time and self-destructible private keys, along with dispensable, one-use secrets to generate our encrypted message.  We will then learn how to structure our message for transmission to insure it is decryptable by the receiving party, with little risk of being compromised during transmission.  To end, we will learn how to decrypt the messages received &amp;quot;on the fly&amp;quot;, using only the supplied crypted message itself.&lt;/p&gt;
&lt;p&gt;This talk is aimed at mid-level Python users but is understandable by beginners.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jeff Lambert</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/end-to-end-encryption-of-distributed-applications.html</guid></item><item><title>From Code to Community</title><link>http://pyvideo.org/pycon-sk-2017/from-code-to-community.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk is about people, not tools. It takes you on a journey from building software to building a community.&lt;/p&gt;
&lt;p&gt;Python communities are special in many ways, from non-commercial nature to viral enthusiasm and friendliness. This talk shares one recipe of growing such community, covering hands-on experience, insider details and financial challenges.&lt;/p&gt;
&lt;p&gt;The recipe is based on the story how one year ago a tempting idea of making Python meetups in Munich was converted into PyCon.DE. No companies, no funds, no business network. Just Python community, and some enthusiasm.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Caceres</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/from-code-to-community.html</guid></item><item><title>How to build up a Python community and empower women</title><link>http://pyvideo.org/pycon-sk-2017/how-to-build-up-a-python-community-and-empower-women.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In 2012 not a lot of people were interested in Python in the relatively small city of Tirana, the capital of Albania. Even fewer girls were interested in Python. During (Jona Azizaj and Kristi Progri) our talk we will share the story of how we, a small but dedicated group of people, jump started the community in a small country like Albania and what other small cities and countries should avoid during their first steps in developing a Python community in similar conditions. Most important we will share tips and tricks on how to keep the Python spirit alive for a long time after the first enthusiastic steps, with the goal that our shared experience will help other communities to make the first steps or grow even further. Also nowadays we are witnessing that the number of girls involved in technical fields, especially development, is really low and we are going to present what as the influence on low participation of girls and the steps we should take to fix it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kristi Progri</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/how-to-build-up-a-python-community-and-empower-women.html</guid></item><item><title>Keynote: Human part of open-source</title><link>http://pyvideo.org/pycon-sk-2017/keynote-human-part-of-open-source.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Adrian is co-creator and former co-BDFL of the Django web framework. He was working as a developer at an American newspaper when the team decided to open-source their homegrown collection of web development tools. These days he's making Soundslice, a web-based music education tool. Originally from Chicago, he now lives in Amsterdam.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adrian Holovaty</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/keynote-human-part-of-open-source.html</guid></item><item><title>Make learning great again: It's the how, not what</title><link>http://pyvideo.org/pycon-sk-2017/make-learning-great-again-its-the-how-not-what.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Are you curious about how to teach programming effectively? Are you a Python fan interested in everything Python-related? Or would you simply like to see a non-standard presentation? If you answered yes at least once, then this funny and inspiring talk is right for you! In around 20 minutes, you'll hear from a young student-teacher about:
- What coding skills are taught to beginners and how
- Experience with teaching
- A few surprises
No technical knowledge is needed (some code samples will be shown, but they're not essential). Discussion at the end is very welcome. Looking forward to seeing you!&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Valdemar Švábenský</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/make-learning-great-again-its-the-how-not-what.html</guid></item><item><title>Making monitoring boring</title><link>http://pyvideo.org/pycon-sk-2017/making-monitoring-boring.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Monitoring, like all infrastructure, is not supposed to be a source of surprises, wonder or excitement. Boring things (such as being able to keep sane working hours, sleeping all night and knowing about potential problems before your users tell you) are preferred.&lt;/p&gt;
&lt;p&gt;To avoid undue excitement, there is a set of principles and best practices to follow. Let's talk about those.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michal Hanula</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/making-monitoring-boring.html</guid></item><item><title>Open Source Contributor Automation</title><link>http://pyvideo.org/pycon-sk-2017/open-source-contributor-automation.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Open Source projects always lack contributors. At the PyCon Munich I presented 10 actionable steps to grow a community, based on what we did to grow coala from ~5 contributors to over 300 people having submitted a patch successfully without lowering our quality bar. The feedback on this talk has been overwhelming and it's time to launch the next iteration:&lt;/p&gt;
&lt;p&gt;&amp;quot;Open Source Contributor Automation&amp;quot; will give you a short overview over the strategies to grow an open source project like a startup. We will then learn about tools and strategies to save maintainers from burning out on newcomers: you will learn about our open source tooling and how to use it on your organization.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Lasse Schuirmann</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/open-source-contributor-automation.html</guid></item><item><title>Our journey from developers to real software engineers</title><link>http://pyvideo.org/pycon-sk-2017/our-journey-from-developers-to-real-software-engineers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Few years ago, we were a bunch of cowboys trying to create the fastest flight ticket search engine. We did a lot of mistakes... But we did it with passion. I will talk about how we knew how to avoid all the stupid issues, but why were we not able to do it at the same time.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jozef Képesi</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/our-journey-from-developers-to-real-software-engineers.html</guid></item><item><title>Panel discussion: Demystifying the recruitment process</title><link>http://pyvideo.org/pycon-sk-2017/panel-discussion-demystifying-the-recruitment-process.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;From Open Source to Your Dream Job Changed to: Panel discussion&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Razvan Chitu</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/panel-discussion-demystifying-the-recruitment-process.html</guid></item><item><title>Python using Redis - what kicked our asses?</title><link>http://pyvideo.org/pycon-sk-2017/python-using-redis-what-kicked-our-asses.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What happened to us in automation team when we found redis and started pretending we understand it? What you should be aware of if you're starting implementing redis into your python services? What to do if you want to have a lot of fun, and what probably not to do if you want to have stable service?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Honza Grec</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/python-using-redis-what-kicked-our-asses.html</guid></item><item><title>Scrum sucks!</title><link>http://pyvideo.org/pycon-sk-2017/scrum-sucks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scrum is an iterative and incremental agile software development framework for managing product development. Phrased that way, it sounds cool and attractive. No wonder: we took the sentence from Wikipedia. Based on first-hand experience, however, we say scrum leaves a lot to be desired.&lt;/p&gt;
&lt;p&gt;At Exponea we grew our IT and Product teams to 20 people in one year without giving excessive thought the process side. Instead, believing that the greatest asset is people, we have been focusing a lot on talent, motivation, engagement and opinions. In my contribution, I will cover how our team goes about software development, what we have tried and rejected, and how we choose to select future colleagues. It is believed our learnings can benefit small and big teams in startups and corporations alike.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Strýček</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/scrum-sucks.html</guid></item><item><title>Selinon - A dynamic distributed task computing with Python</title><link>http://pyvideo.org/pycon-sk-2017/selinon-a-dynamic-distributed-task-computing-with-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Selinon is a project that is based on popular project Celery. Selinon gives you a power to define flows and dependencies in flows in a distributed environments, schedule tasks based on results of workers, their success or any external events.&lt;/p&gt;
&lt;p&gt;Selinon is an advanced flow management above Celery project (an asynchronous distributed task queue) written in Python3, that allows you to dynamically schedule tasks based on results of previous tasks, group tasks into flows, schedule flows from other flows, store results of tasks in your storages and databases transparently, validate results against defined JSON schemas, track flow progress via the build-in tracing mechanism, complex per-task or per-flow failure handling with fallback tasks or fallback flows. All of this can be done in a fully distributed environments orchestrated by OpenShift, Kubernetes or any other orchestration tool.&lt;/p&gt;
&lt;p&gt;The project is actively developed and hosted at &lt;a class="reference external" href="https://github.com/selinon"&gt;https://github.com/selinon&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fridolín Pokorný</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/selinon-a-dynamic-distributed-task-computing-with-python.html</guid></item><item><title>The Balance of Python</title><link>http://pyvideo.org/pycon-sk-2017/the-balance-of-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python successfully maintains a fine balance between being easy to learn and
useful for even large-scale projects.
This is achieved both through the design of the language, and through
the community.&lt;/p&gt;
&lt;p&gt;On the language design side, Python is built around a closely curated set
of mechanisms – iterators, attribute/item access, callables, context managers,
and so on.
I'll compare this set to languages like C, Lisp, Java, C++, and JavaScript,
and show why it works – and where it could be better.&lt;/p&gt;
&lt;p&gt;In design discussions around Python, the phrase &amp;quot;consenting adults&amp;quot; is
often repeated.
Python is designed to not prevent its users from doing anything.
You can fairly freely inspect classes or even monkeypatch as needed.
To balance this freedom, there is a vague, ever-changing notion of &amp;quot;Pythonic
code&amp;quot;, which is nevertheless quite successful in making the Python that
actual programmers use quite a strict language.
I'll share some insights about about how this balance works out, and how it
helped make Python the language – and community – that it is today.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Petr Viktorin</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/the-balance-of-python.html</guid></item><item><title>Through Python to the stars!</title><link>http://pyvideo.org/pycon-sk-2017/through-python-to-the-stars.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In the intersection of mechanics, mathematics and “cool stuff that travels through space” lies Astrodynamics, a beautiful branch of physics that studies the motion of spacecraft. Rocket launches have never been so popular thanks to companies like Space X, more and more investors pay attention to aerospace startups and amazing missions explore our planet and our Solar System every day. In this talk we will get to know poliastro, a pure Python library that we can use to compute orbital maneuvers, plot trajectories and much more. The role of JIT compiling (using numba) to replace old and busted FORTRAN algorithms will also be discussed, as well as the importance of open source in scientific discoveries.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Juan Luis Cano Rodríguez</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/through-python-to-the-stars.html</guid></item><item><title>What makes Silicon Valley software developers special</title><link>http://pyvideo.org/pycon-sk-2017/what-makes-silicon-valley-software-developers-special.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Finding talented software developers has always been an important part of my career. Ever since I moved to Silicon Valley, I quickly realized my current hiring skills and beliefs wouldn't work there. As I started to adapt to the new job market, I was able to identify some of the differences between developers in Silicon Valley and CEE region.&lt;/p&gt;
&lt;p&gt;During this talk, I'll focus on the state of talent in SV, the latest trends in talent acquisition and share some surprising learnings about the developers in the Silicon Valley.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pavel Serbajlo</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/what-makes-silicon-valley-software-developers-special.html</guid></item><item><title>You should contribute to open-source</title><link>http://pyvideo.org/pycon-sk-2017/you-should-contribute-to-open-source.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is no doubt that open-source software plays an important role in the world of software development, ranging from the operating systems we use, to languages and libraries, to development tools, and everywhere in between. Yet, many software developers never consider contributing to the open-source software that they work with, not even when an obvious, direct opportunity presents itself. In this talk I'll try to make a case for why it's in your own interest, as a software developer, to get involved in open-source development, and give a few pointers to those who are interested, but just don't know where to start.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michal Petrucha</dc:creator><pubDate>Sat, 11 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-11:pycon-sk-2017/you-should-contribute-to-open-source.html</guid></item><item><title>Ako môže AI v Pythone pomôcť firme rásť?</title><link>http://pyvideo.org/pycon-sk-2017/ako-moze-ai-v-pythone-pomoct-firme-rast.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Na praktických príkladoch ukážem akú hodnotu môže umelá inteligencia priniesť pre e-commerce firmu. Predvediem ako sa dá identifikovať príležitosť, ako ju zadefinovať ako zadanie pre AI, ako vybrať vhodný algoritmus a odmerať dosiahnutý prínos.
Bude to aj o návrhu experimentov na zelenej lúke, keď neexistujú historické dáta. A takisto aj o učení sa z dát a limitoch takéhoto učenia.
Dotkneme sa i tém ako bandit algoritmy, prediktívne modely, odporúčacie systémy - a to všetko s ukážkami v Pythone.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jožo Kováč</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/ako-moze-ai-v-pythone-pomoct-firme-rast.html</guid></item><item><title>Ako si lepší e-government spravíme sami</title><link>http://pyvideo.org/pycon-sk-2017/ako-si-lepsi-e-government-spravime-sami.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;V Slovensko.Digital okrem iného programujeme Ekosystém. Zbierame tam dáta, robíme rozumné API, poskytujeme služby a ukazujeme, že robiť dobré &amp;quot;štátne&amp;quot; služby nemusí robiť len štát, nemusí to byť byť zložité, trvať roky, stáť nás to milióny. Dozviete sa čo v Slovensko.Digital robíme dnes, čo plánujeme, kde potrebujeme pomôcť, a hlavne ako si ten lepší egov urobíme teraz a spoločne my.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Suchal</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/ako-si-lepsi-e-government-spravime-sami.html</guid></item><item><title>Alternatívne spôsoby ako spúšťať testy a vyhodnocovať ich výsledky</title><link>http://pyvideo.org/pycon-sk-2017/alternativne-sposoby-ako-spustat-testy-a-vyhodnocovat-ich-vysledky.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Konceptuálne zamyslenie sa nad tým ako používať sadu testov a ako interpretovať jej výsledky. Čo je pri tom problematické a ako z nej získať čo najväčšiu hodnotu.&lt;/p&gt;
&lt;p&gt;Najpoužívanejším úžívateľským rozhraním na spúštanie testov sú pravdepodobne command line, PyCharm a CI Servre. Ukážem ich výhody a limity. Predvediem alpha verziu nového nástroja na pohodlné výhľadávanie, spúštanie testov, uchovávanie výsledkov a ich prehľadné zobrazenie. Ukážem ako sa vyhnúť kilobajtom neštruktúrovaného textového výpisu.&lt;/p&gt;
&lt;p&gt;Predvediem koncept zobrazenia stack trace inline v editore zdrojového kódu a pohodlnú navigáciu hore-dole po ňom.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tibor Arpáš</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/alternativne-sposoby-ako-spustat-testy-a-vyhodnocovat-ich-vysledky.html</guid></item><item><title>Closures in Python</title><link>http://pyvideo.org/pycon-sk-2017/closures-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Almost all languages today have support for closures. Python is no exception. We are going to look at closure concept in general, how it works and what are pros and cons of such approach. The discussion shall include details about functions, scopes, lambdas and comparison to clasess . We are also going to think about use cases for this technique and compare behavior to other languages like Javascript, C# or Java.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Slavomir Hudak</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/closures-in-python.html</guid></item><item><title>ctypes tutorial</title><link>http://pyvideo.org/pycon-sk-2017/ctypes-tutorial.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python je dynamický programovací jazyk, ktorý bol navrhnutý tak, aby jeho kritické časti sa dali jednoducho prepísať do jazyka C. Preto sa často stretávame s praxou, že Python knižnice sa nesnažia znovu implementovať funkcionalitu ale poskytujú wrapper už existujúcej C knižnice. Implementácia takéhoto wrappera pomocou API python interpretera môže byt náročnejšia pretože si vyžaduje znalosť programovania v jazyku C a znalosť Python/C API. Navyše pri programovaní musíme priamo alebo nepriamo pracovať s pamäťou, čo môže viesť k chybám spôsobujúcim únik pamäte. Takéto riešenie má taktiež problém s prenositeľnosťou na alternatívne implementácie Pythonu (napr. PyPy, Jython).&lt;/p&gt;
&lt;p&gt;Väčšinu týchto problémov rieši knižnica ctypes. ctypes je súčasťou štandardnej distribúcie Pythonu. Poskytuje možnosť volania C funkcií priamo z Pythonu bez nutnosti programovania v jazyku C.&lt;/p&gt;
&lt;p&gt;V rámci prezentácie bude predstavená ctypes knižnica s príkladmi definovania API obsahujúce zložitejšie štruktúry a funkcie. V rámci praktického príkladu vytvoríme python wrapper nad openldap knižnicou libldap.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Matuš Valo</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/ctypes-tutorial.html</guid></item><item><title>Custom Python Libraries for Robot Framework</title><link>http://pyvideo.org/pycon-sk-2017/custom-python-libraries-for-robot-framework.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;V priebehu posledných rokov sa stále častejšie kľadie dôraz na automatizované testovanie. Testeri používajú viacero automatizačných frameworkov a klasické testovanie sa mení viacej na skriptovanie až programovanie. Python je jazyk, ktorý je vhodný aj na takúto úlohu. Jeden z najpopulárnejších automatizačných frameworkov na testovanie je Robot Framework, ktorý je naprogramovaný v Pythone a jeho tvorca, Pekka Klärck pochádza z radov testerov. RF je generický nástoj, ktorý nie vždy pokrýva naše potreby. Jedným zo spôsobov je programovanie vlastných knižníc pre RF, s ktorými si vieme uľahčiť prácu s komplexným systémom. Prezentácia ukáže praktické použitie rôznych typov knižníc pre RF.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Miroslav Beka</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/custom-python-libraries-for-robot-framework.html</guid></item><item><title>Grafika v Jupyter notebookoch a vplyv programovacích prostriedkov na dušu študenta i učiteľa</title><link>http://pyvideo.org/pycon-sk-2017/grafika-v-jupyter-notebookoch-a-vplyv-programovacich-prostriedkov-na-dusu-studenta-i-ucitela.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ukážeme si možnosti 2D i 3D zobrazovania zaujímavých vecí v Jupyter notebookoch (Matplotlib, Bokeh, Mayavi),
ich interaktívne zmeny a prvky grafického používateľského rozhrania (IPywidgets). V príspevku by mal ostať priestor na diskusiu, akým spôsobom by sa mohli prostriedky na báze jazyka Python použiť vo výučbe (nielen informatiky).&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michal Kaukič</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/grafika-v-jupyter-notebookoch-a-vplyv-programovacich-prostriedkov-na-dusu-studenta-i-ucitela.html</guid></item><item><title>Make sudo pip Safe Again</title><link>http://pyvideo.org/pycon-sk-2017/make-sudo-pip-safe-again.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;At the present time, running sudo pip3 in Fedora is not safe. Pip shares its installation directory with DNF package manager, can remove DNF-managed files and generally break the Python 3 interpreter.
In this talk i'll try to describe the problem, possible solutions that have been discussed and the result of work which was proposed as a Fedora Change. I will also mention the process of discovering initialization of Python interpreter and I will show you a couple of live demos.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michal Cyprian</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/make-sudo-pip-safe-again.html</guid></item><item><title>MicroPython &amp; TREZOR</title><link>http://pyvideo.org/pycon-sk-2017/micropython-trezor.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;MicroPython je moderna implementacia Pythonu pre mikrokontrolery a embedded systemy. Pozrieme sa spolocne na ake problemy sme pocas vyvoja bitcoinovej hardverovej penazenky TREZOR narazili a ako sme ich vyriesili.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Pavol Rusnak</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/micropython-trezor.html</guid></item><item><title>Open Data - introduction, status in Slovakia and role of Python</title><link>http://pyvideo.org/pycon-sk-2017/open-data-introduction-status-in-slovakia-and-role-of-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will cover Open Data in three main parts:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Introduction about Open Data will explain the basics (technicalities and licensing), motivation and examples of benefits.&lt;/li&gt;
&lt;li&gt;Situation in Slovakia will to some degree cover parts of history, current state and possible outlooks into future.&lt;/li&gt;
&lt;li&gt;What role plays Python and people skilled with using Python play in Open Data?&lt;/li&gt;
&lt;/ol&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Peter Hanečák</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/open-data-introduction-status-in-slovakia-and-role-of-python.html</guid></item><item><title>Spracovanie textu a Machine Learning v Pythone</title><link>http://pyvideo.org/pycon-sk-2017/spracovanie-textu-a-machine-learning-v-pythone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Úvod do spracovania textu a machine learningu plus ukážky a príklady použitia knižníc na NLP a ML v pythone. Prejdeme si klasické knižnice NLTK (na spracovanie textu) a scikit-learn (na ML) a ukážeme si aj moderné knižnice gensim (hlavne dobrý na slovné vektory) a Keras.io (na deeplearning).
Na konci si ukážeme ako sa dajú poskladať pekné vizualizácie na niekoľko riadkov kódu.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vladimir Boza</dc:creator><pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-03-10:pycon-sk-2017/spracovanie-textu-a-machine-learning-v-pythone.html</guid></item></channel></rss>